# Ugly Numbers (Уродливые числа)
# Числа, чьи единственные простые множители составляют 2, 3 или 5, т.е. число делится на 2, 3 и 5.
# Чтобы его найти делим число на наименьший возможный делитель из 2, 3 и 5,
# до тех пор пока не будет 1, то это число уродливое.
#
# Пример: `12/2 = 6/2 = 3/3 = 1` - уродливое, `11/11 = 1` - не уродливое.
#
# Последовательность `1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, ...` показывает первые 11 уродливых чисел.
# По соглашению, 1 включена.

def ugly_numbers(n):
    """Ugly Numbers (Уродливые числа). Сложность O(n)"""
    dp_ugly = [0] * n  # таблица (список) для хранения уродливых чисел
    dp_ugly[0] = 1  # первое уродливое число

    u2 = u3 = u5 = 0  # указатели на индексы чисел равных 2, 3 и 5
    # начальные переменные для значений 2, 3 и 5
    multiple_2 = 2
    multiple_3 = 3
    multiple_5 = 5

    for i in range(1, n):
        dp_ugly[i] = min(multiple_2, multiple_3, multiple_5)  # находим минимальное значение из всех доступных множит.

        # увеличиваем указатель чисел и заменяем его следующим кратным
        if dp_ugly[i] == multiple_2:  # если в массив добавлено число кратное 2
            u2 += 1  # увеличиваем указатель индекса на 1
            multiple_2 = dp_ugly[u2] * 2  # и умножаем предыдущее кратное на 2, чтобы получить следующее кратное

        if dp_ugly[i] == multiple_3:
            u3 += 1
            multiple_3 = dp_ugly[u3] * 3

        if dp_ugly[i] == multiple_5:
            u5 += 1
            multiple_5 = dp_ugly[u5] * 5

    return dp_ugly[n - 1]


if __name__ == '__main__':
    n = 15
    print(f'{n}-th ugly number is:', ugly_numbers(n))
